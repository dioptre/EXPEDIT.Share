(function () {
    
    // Template to convert JSON to html form...
    window.renderFunction['tiny-form'] = function (selected) {
        var formData = selected.data('json');
        var formID = 'frm-' + formData.id;

        var $form = $('<form>').attr({
            id: formID
        })

        $.each(formData.fields, function (i, d) {
            var source = $("#temp-" + d.field_type).html();
            var template = Handlebars.compile(source);
            var html = template(d);
            $form.append(html);
        })



        $form.append($('<div>').attr({
            class: 'btn btn-primary tiny-form-submit'
        }).html('submit'))

        selected.html($form);
    }


    window.renderFunction['tiny-form-trigger'] = function (selected) {
        selected.find('.tiny-form-submit').click(function (e) {
            var $this = $(this);
            var $form = $this.closest('form');

            

            if (typeof $form.data('bootstrapValidator') === 'undefined') {
                $form.bootstrapValidator();
            }

            var validator = $form.data('bootstrapValidator');
            validator.validate();
            if (validator.isValid()) {

                // let's select and cache all the fields
                var $inputs = $form.find("input, select, button, textarea, hidden");
                // serialize the data in the form

                var serializedData = {
                    FormData: $form.serializeArray(),
                    FormJSON: $form.parent().data('json')
                }

                serializedData.FormJSON.origin = window.location.href;

                // let's disable the inputs for the duration of the ajax request
                $inputs.prop("disabled", true);

                // fire off the request to /form.php
                request = $.ajax({
                    url: '/share/forms',
                    type: "post",                    
                    data: encodeURIComponent(JSON.stringify(serializedData))
                });

                // callback handler that will be called on success
                request.done(function (response, textStatus, jqXHR) {
                    // log a message to the console
                    Messenger().post({ type: 'success', message: 'The form has been submitted successfully.' });
                    $form[0].reset();
                    $form.data('bootstrapValidator').resetForm();
                });

                // callback handler that will be called on failure
                request.fail(function (jqXHR, textStatus, errorThrown) {
                    // log the error to the console
                    Messenger().post({ type: 'error', message: 'Error submitting form. Please try again.' });
                    //alertify.error("The following error occured: " + textStatus, errorThrown);                    
                });

                // callback handler that will be called regardless
                // if the request failed or succeeded
                request.always(function () {
                    // reenable the inputs
                    $inputs.prop("disabled", false);
                });

            }
        })
    }

    // This is extra code run inside tinymce to allow editing of the form
    window.renderFunction['tiny-form-editor'] = function (e) {
        if (typeof e !== 'undefined' && typeof e.target !== 'undefined' && typeof e.target.editorContainer !== 'undefined' && e.target.editorContainer) {
            var currentDocument = $(tinymce.activeEditor.contentDocument);
            currentDocument.find('*').andSelf().filter('.tiny').each(function (i, selected) {
                
                if ($(selected).attr('type') === 'tiny-form') {

                    // Setup click trigger
                    $(selected).click(function (e) {
                        $this = $(this);
                        
                        e.preventDefault();
                        e.stopPropagation();
                        e.stopImmediatePropagation();



                        $.colorbox.selectedData = $this.data('json');
                        var url = "Modules/EXPEDIT.Share/Scripts/formbuilderjs/index.html";
                        $.colorbox({
                            href: url,
                            iframe: true,
                            reposition: true,
                            width: "90%",
                            height: "90%",
                            onLoad: function () {
                                // hide the scrollbars from the main window
                                $('html, body').css('overflow', 'hidden');
                                //$('#cboxClose').remove();
                            },
                            onClosed: function () {
                                $('html, body').css('overflow', '');

                                var selectedData = $.colorbox.selectedData;

                                if (selectedData == null) // Dialog cancelled, do nothing
                                    return;


                                var oldData = $this.data('json');
                                var selected = selectedData;
                                
                                debugger;

                                var newData = $.extend(oldData, selected);

                                // Set new JSON
                                $this.attr({'data-json': JSON.stringify(newData)});


                                console.log($this.data('json'))
                                // Rerender template
                                window.renderFunction['tiny-form']($this);

                                $.colorbox.selectedData = null;

                                
                            }
                        });
                    });
                }
                

            });
        }
    }


        



})();


@model EXPEDIT.Share.ViewModels.PickFileViewModel
@Html.Partial("Header")

@{
    Style.Require("Picker");
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    Layout.Title = T("Pick File").ToString();
}
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/share-pickfile.js")"></script>
<script type="text/x-handlebars">    
@using (Html.BeginForm("PickFile", "User", new { area = "EXPEDIT.Share" }, FormMethod.Post, new { id = "form1", @class = "form" }))
{
<article class="content-item page" style="margin:11px;">
    <fieldset>
    @*<legend></legend>*@
    <div class="editor-label">
        <p><strong>Search:</strong>{{view Ember.TextField valueBinding="q" type='text' placeholder="Add keywords" id="searchFile" classNames="searchbox"}}</p>
    </div>
    <div class="editor-field">
    <!-- The file upload form used as target for the file upload widget -->
    <div id="fileupload">
        @Html.AntiForgeryToken()
        <!-- Redirect browsers with JavaScript disabled to the origin page -->
        @*<noscript><input type="hidden" name="redirect" value="http://blueimp.github.io/jQuery-File-Upload/"></noscript>*@
        <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
        <div class="row fileupload-buttonbar" style="margin-left:0px;">
            <div class="col-lg-7">
                <!-- The fileinput-button span is used to style the file input field as button -->
                <span class="btn btn-success fileinput-button">
                    <i class="glyphicon glyphicon-plus"></i>
                    <span>Add files...</span>
                    <input type="file" name="files[]" multiple>
                </span>
@*                <button type="submit" class="btn btn-primary start">
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start upload</span>
                </button>*@
                @*<button type="reset" class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel upload</span>
                </button>
                <button type="button" class="btn btn-danger delete">
                    <i class="glyphicon glyphicon-trash"></i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" class="toggle">*@
                <!-- The global file processing state -->
                <span class="fileupload-process"></span>
            </div>
            <!-- The global progress state -->
            <div class="col-lg-5 fileupload-progress fade">
                <!-- The global progress bar -->
                <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                    <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                </div>
                <!-- The extended global progress state -->
                <div class="progress-extended">&nbsp;</div>
            </div>
        </div>
        <!-- The table listing the files available for upload/download -->
        <table role="presentation" class="table table-striped"><tbody class="files"></tbody></table>
    </div>
    </div>
    {{outlet}}
    </fieldset>
    @*<input type="submit" value="Submit" />*@
    @Html.HiddenFor(m => m.FileDataID)
    </article>
}
  </script>
  <script type="text/x-handlebars" id="loading">
      <div style="text-align:center;">
          <h4>Loading...</h4>
          <img src="@Url.Content("~/Modules/EXPEDIT.Share/Images/loading.gif")" />
      </div>
  </script>
  <script type="text/x-handlebars" id="search">
     <ul class="pager">
         {{#if prev}}
            
            <li><a {{action 'transition' 'Previous'}}>Previous</a></li>
         {{/if}}          
         {{#if next}}
        <li><a {{action 'transition' 'Next'}}>Next</a></li>
         {{/if}}
     </ul>
     <div id="media-library-main-list" class=""><ul id="pickfiles" style="list-style-type:none !important;">
     {{#each item in model.images}}  
         <li {{action 'selectToggle' item}} {{bind-attr class="item.Selected:ui-selected"}}>
             <div class="thumbnail"><div class="media-thumbnail media-thumbnail-image mime-type-image-png"><img {{bind-attr src="item.ImageUrl"}}"></div></div>
             <div class="media-library-main-list-overlay"><p class="title">{{item.Title}}</p></div>
         </li>
    {{/each}}
    </ul></div>
  </script>
<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
        <td>
            <span class="preview"></span>
        </td>
        <td>
            <p class="name">{%=file.name%}</p>
            <strong class="error text-danger"></strong>
        </td>
        <td>
            <p class="size">Processing...</p>
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
        </td>
        <td>
            {% if (!i && !o.options.autoUpload) { %}
                <button class="btn btn-primary start" disabled>
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start</span>
                </button>
            {% } %}
            {% if (!i) { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>

<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade">
        <td>
            <span class="preview">
                {% if (file.thumbnailUrl) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnailUrl%}"></a>
                {% } %}
            </span>
        </td>
        <td>
            <p class="name">
                {% if (file.url) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
                {% } else { %}
                    <span>{%=file.name%}</span>
                {% } %}
            </p>
            {% if (file.error) { %}
                <div><span class="label label-danger">Error</span> {%=file.error%}</div>
            {% } %}
        </td>
        <td>
            <span class="size">{%=o.formatFileSize(file.size)%}</span>
        </td>
        <td>
            {% if (file.deleteUrl) { %}
                <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}"{% if (file.deleteWithCredentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
                    <i class="glyphicon glyphicon-trash"></i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" name="delete" value="1" class="toggle">
            {% } else { %}
                <button class="btn btn-warning select ufselector" type="button" onclick="pickFile('{%=file.url%}','{%=file.name%}');return false;">
                    <i class="glyphicon glyphicon-ok"></i>
                    <span>Select</span>
                </button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>

<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.fileupload.js")"></script>
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.fileupload-ui.js")"></script>
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.iframe-transport.js")"></script>
<!-- The Templates plugin is included to render the upload/download listings -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/tmpl.min.js")"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/load-image.min.js")"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/canvas-to-blob.min.js")"></script>
<!-- blueimp Gallery script -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.blueimp-gallery.min.js")"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.iframe-transport.js")"></script>
<!-- The basic File Upload plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.fileupload.js")"></script>
<!-- The File Upload processing plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.fileupload-process.js")"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.fileupload-image.js")"></script>
<!-- The File Upload audio preview plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.fileupload-audio.js")"></script>
<!-- The File Upload video preview plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.fileupload-video.js")"></script>
<!-- The File Upload validation plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.fileupload-validate.js")"></script>
<!-- The File Upload user interface plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Share/Scripts/jquery.fileupload-ui.js")"></script>

<link href="@Url.Content("~/Modules/EXPEDIT.Share/Styles/blueimp-gallery.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Modules/EXPEDIT.Share/Styles/jquery.fileupload-ui.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Modules/EXPEDIT.Share/Styles/jquery.fileupload.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Modules/EXPEDIT.Share/Styles/bootstrap.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Modules/EXPEDIT.Share/Styles/expedit-share.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Themes/MAS1/Styles/site.css")" rel="stylesheet" type="text/css" />

 <script type="text/javascript">
  

     // jqXHRData needed for grabbing by data object of fileupload scope
     var jqXHRData;     

     function pickFile(refid, name) {
        //alert(refid + name);
         //console.debug(props);
         //for (var i = 0; i < viewModel.selection().length; i++) {
         //    var selection = viewModel.selection()[i];
         //    selectedData.push(selection.data);
         //}
         if (refid.lastIndexOf('/') > 0)
             refid = refid.substring(refid.lastIndexOf('/') + 1);
        if (parent.$.colorbox) {
            var selectedData = [];
            selectedData.push({});
            selectedData[0].refid = refid;
            selectedData[0].name = name;
            parent.$.colorbox.close();
        };
        parent.$.colorbox.selectedData = selectedData;
        parent.$.colorbox.close();
     }

     $("#media-library-main-selection-select > .button-cancel").on('click', function () {
         cancelPickFile();
     });

     function cancelPickFile() {
         if (parent.$.colorbox) {
             parent.$.colorbox.selectedData = null;
             parent.$.colorbox.close();
         };
     }


     function initSimpleFileUpload() {
         'use strict';

         ////// Initialize the jQuery File Upload widget:
         //$('#fileupload').fileupload({
         //    // Uncomment the following to send cross-domain cookies:
         //    //xhrFields: {withCredentials: true},
         //    url: '/store/user/uploadfile'
         //});

         $('#fileupload').fileupload({
             url: '/share/uploadfile',
             dataType: 'json',
             autoUpload: true,
             add: function (e, data) {
                 for (var i = 0; i < data.files.length; i++) {
                     if (!(/\.(gif|jpg|jpeg|tiff|png|pdf|docx|doc|xls|xlsx|ppt|pptx|zip|psd|csv|txt)$/i).test(data.files[i].name)) {
                         alert('Unsupported file format.');
                         return false;
                     } else 
                     if (data.files[i].size > 2000000) { // 2mb
                         alert('Please upload a smaller file, max size is 2 MB');
                         return false;
                     }
                 }
                 $('#fileupload').addClass('fileupload-processing');
                 data.submit()
                 .success(function (result, textStatus, jqXHR) {
                     if (result.isValid) {
                         $('#fileupload').fileupload('option', 'done')
                             .call('#fileupload', $.Event('done'), { result: result });
                     }
                     else {

                     }
                     $('#fileupload').removeClass('fileupload-processing');
                 })
                    .error(function (jqXHR, textStatus, errorThrown) {
                        $('#fileupload').removeClass('fileupload-processing');
                    });
                 
             },
             //done: function (event, data) {
             //    if (data.result.isUploaded) {

             //    }
             //    else {
             //        //alert(data.result.message);
             //    }                 
             //},
             //fail: function (event, data) {
             //    if (data.files[0].error) {
             //        alert(data.files[0].error);
             //    }
             //},
             formData: function (form) {
                 return [{ name: "__RequestVerificationToken", value: $('input[name="__RequestVerificationToken"]').val() },
                     { name: "ReferenceID", value: "@Model.ReferenceID" }
                 ];
             }
         });

         // Enable iframe cross-domain access via redirect option:
         //$('#fileupload').fileupload(
         //    'option',
         //    'redirect',
         //    window.location.href.replace(
         //        /\/[^\/]*$/,
         //        '/cors/result.html?%s'
         //    )
         //);

       
         $('#fileupload').addClass('fileupload-processing');
         $.ajax({
             // Uncomment the following to send cross-domain cookies:
             //xhrFields: {withCredentials: true},
             type: "POST",
             url: $('#fileupload').fileupload('option', 'url'),
             dataType: 'json',
             data: { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
             context: $('#fileupload')[0]
         }).always(function () {
             $(this).removeClass('fileupload-processing');
         }).done(function (result) {
             $(this).fileupload('option', 'done')
                 .call(this, $.Event('done'), { result: result });
         });

     }

     $(document).ready(function () {

         //Initialization of fileupload
         initSimpleFileUpload();

         //Handler for "Start upload" button 
         $("#hl-start-upload").on('click', function () {
             if (jqXHRData) {
                 jqXHRData.submit();
             }
             return false;
         });
      
     });




</script>

